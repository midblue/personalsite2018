__NUXT_JSONP__("/labs", {data:[{content:["\u003Csection\u003E\u003Ch2\u003E\u003Ca target=\"_blank\" href=\"\u002Fvidsynth\"\u003EVidSynth\u003C\u002Fa\u003E: a Webcam-Controlled Virtual Instrument\u003C\u002Fh2\u003E\n\u003Ch4\u003ESep 2020\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Fvidsynth\u002F1.jpg\" alt=\"Vidsynth demo\"\u003E After attending \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgaudeamus.nl\u002Fen\u002Fevents\u002Fworkshop-designing-a-reprogrammable-instrument-rafaele-andrade\u002F\"\u003Ea workshop\u003C\u002Fa\u003E in Utrecht about designing a reprogrammable instrument, and I ended up inspired to create something using video as an input source.\u003C\u002Fp\u003E\n\u003Cp\u003EA day of tinkering later, I made \u003Ca target=\"_blank\" href=\"\u002Fvidsynth\"\u003Ethis demo\u003C\u002Fa\u003E (\u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgithub.com\u002Fmidblue\u002Fvidsynth\"\u003Esource code\u003C\u002Fa\u003E) which takes 4 color points from your webcam and uses their hue, saturation, and lightness to generate tones, bpm, and chord choices. It sounds like chaos, but in a slightly ordered fashion. I can imagine the applications for something like this being used to help blind people “see” through audio, or to make soundscapes of various spaces — for example, maybe to be used as background music for a podcast about different cities?\u003C\u002Fp\u003E\n\u003Cp\u003EI generated the sounds using \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fp5js.org\u002Freference\u002F#\u002Flibraries\u002Fp5.sound\"\u003Ep5.js\u003C\u002Fa\u003E, which was my first time using that libary — I can’t wait to dig deeper into what p5 can do, especially in terms of visualization!\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003E\u003Ca target=\"_blank\" href=\"\u002Fcmyk-tester\u002F\"\u003ECMYK Splitter\u003C\u002Fa\u003E for Risograph Printing\u003C\u002Fh2\u003E\n\u003Ch4\u003EMay 2020\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Fcmyksplitter\u002F1.jpg\" alt=\"CMYK splitter interface\"\u003E While designing \u003Ca target=\"_blank\" href=\"https:\u002F\u002Ftravelingurbanism.stores.jp\u002F\"\u003Ethe second zine\u003C\u002Fa\u003E for \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fwww.travelingcircusofurbanism.com\u002F\"\u003ETraveling Circus of Urbanism\u003C\u002Fa\u003E, I was inspired by Oda-san of \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fhandsawpresstokyo.com\u002Findex.html\"\u003EHand Saw Press Kyoto\u003C\u002Fa\u003E to develop a web tool for \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRisograph\"\u003ERisograph\u003C\u002Fa\u003E printing that can split any image into CMYK and reassign new colors\u002Fopacities to each channel. You can then download all of the channels as the transparent\u002Fblack that’s necessary for printing.\u003C\u002Fp\u003E\n\u003Cp\u003EI had a lot of fun going back and forth with Oda-san over how this tool should work, and I hear that it’s starting to catch on with Risograph printers in Japan!\u003C\u002Fp\u003E\n\u003Cp\u003ETry it \u003Ca target=\"_blank\" href=\"\u002Fcmyk-tester\u002F\"\u003Ehere\u003C\u002Fa\u003E, or check out the \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgithub.com\u002Fmidblue\u002Fcmyk-tester\"\u003Esource code\u003C\u002Fa\u003E!\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003E\u003Ca target=\"_blank\" href=\"\u002Fsvgmaker\"\u003EAutogenerated SVG Art\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch4\u003EMay 2020\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Fsvgmaker\u002F1.jpg\" alt=\"Auto-generated art from the svgmaker\"\u003E When determining the style for the \u003Ca target=\"_blank\" href=\"https:\u002F\u002Ftravelingurbanism.stores.jp\u002F\"\u003Ethe second zine\u003C\u002Fa\u003E for \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fwww.travelingcircusofurbanism.com\u002F\"\u003ETraveling Circus of Urbanism\u003C\u002Fa\u003E, I decided I wanted to have an element of technological randomness in the illustrations. We knew we’d be going for a 2-color print, so I developed \u003Ca target=\"_blank\" href=\"\u002Fsvgmaker\"\u003Ethis tool\u003C\u002Fa\u003E to create randomized visuals that we could generate infinitely and then curate the best ones to use in the zine.\u003C\u002Fp\u003E\n\u003Cp\u003EIt uses a variety of shapes, gradients, and masks, all created programmatically using Vue. \u003Ca target=\"_blank\" href=\"\u002Fsvgmaker\"\u003EGive it a whirl\u003C\u002Fa\u003E if you’re curious, or take a peek at the \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgithub.com\u002Fmidblue\u002FsvgArt\"\u003Esource code\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003ELudum Dare Game Jam #46: \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fswsteffes.itch.io\u002Ffinal-flower-petals-of-a-lost-age\"\u003EFinal Flower\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch4\u003EApr 2020\u003C\u002Fh4\u003E\n\u003Cdiv class=\"videowrapper\"\u003E\u003Cvideo align=\"top\" src=\"\u002Flabs\u002Ffinalflower\u002F1.mp4\" autoplay muted loop \u003E\u003C\u002Fvideo\u003E\u003C\u002Fdiv\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Ffinalflower\u002F1.png\" alt=\"Final Flower cover image\"\u003E I was part of a 5-person team tasked with making a game in 3 days on the theme of “keep it alive.” I was in charge of the UI, music, sound effects, level design, and menus for \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fswsteffes.itch.io\u002Ffinal-flower-petals-of-a-lost-age\"\u003Eour challening platformer\u003C\u002Fa\u003E in which you play as a robot tasked with keeping the last flower on Earth alive in a hostile, metallic world. I also made a \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgithub.com\u002Fmidblue\u002Fhighscore\"\u003Ehigh score API\u003C\u002Fa\u003E for this game that can be used in anyone’s project — it’s open source, so you can use it in your next game jam! We got some amazing replayability out of the high score system — we saw hundreds of players competing for the top spots, with some extreme optimizations. Overall, I think it’s the best game-jam game I’ve been a part of yet!\u003C\u002Fp\u003E\n\u003Cp\u003EYou can play the game in your browser, so \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fswsteffes.itch.io\u002Ffinal-flower-petals-of-a-lost-age\"\u003Echeck it out!\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003EImage Color Analyzer\u003C\u002Fh2\u003E\n\u003Ch4\u003EMar 2020\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Fcoloranalyzer\u002F1.jpg\" alt=\"Example of color analysis\"\u003E A friend of mine was trying to take a deeper look at the color pallettes of some of her favorite photographers. I developed this simple tool using \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgithub.com\u002Flovell\u002Fsharp\"\u003ESharp.js\u003C\u002Fa\u003E to extract color information from an image and organize it in several patterns: by hue, by saturation, and by lightness. From there, she could learn what swaths of colors were being prioritized in filters, how much or little flat whites\u002Fblacks were in use, which hues were being desaturated or shifted toward another color, and more.\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003EGlobal Game Jam 2020: \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fswsteffes.itch.io\u002Ftrack-beat\"\u003ETrackBeat\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch4\u003EMar 2020\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Ftrackbeat\u002F1.jpg\" alt=\"TrackBeat cover image\"\u003E I made this game on the theme of “repair” as part of a 5-person team in Osaka. TrackBeat is a rhythm game about being tied to the front of a train, hammering the bumps in the track into shape in time with the music as you roll along. We had some real heavy hitters in our squad — professional 3d modellers and rock-star coders — so I decided to go a role I’d never tried: music! I made a few unique tracks for the game, and I’m happy with how they came out. I also took on the UI and 2D graphics for the game.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca target=\"_blank\" href=\"https:\u002F\u002Fswsteffes.itch.io\u002Ftrack-beat\"\u003EDownload it here!\u003C\u002Fa\u003E (Windows only)\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003E\u003Ca target=\"_blank\" href=\"https:\u002F\u002Fwww.brdg.to\"\u003EBridge To\u003C\u002Fa\u003E: An Urbanist Residency in Kyoto\u003C\u002Fh2\u003E\n\u003Ch4\u003EDec 2019\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Fbridgetosite\u002F1.jpg\" alt=\"brdg.to homepage\"\u003E I developed this website for \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fwww.brdg.to\"\u003EBridge To\u003C\u002Fa\u003E, a new urbanist residency in Kyoto, Japan that my wife and I run. It’s got a few fun tricks involving position:sticky elements, and I’m overall very happy with how it came out. The applications have been coming in, so I guess it’s working!\u003C\u002Fp\u003E\n\u003Cp\u003EThis project was a good excuse to stretch my illustration capabilities — I created the diagram of our space in Sketch, and then brought it to life on the web.\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003E\u003Ca target=\"_blank\" href=\"\u002Fautochess\u002F\"\u003ELiteral Auto Chess\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch4\u003EOct 2019\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cvideo align=\"top\" src=\"\u002Flabs\u002Fautochess\u002F1.mp4\" autoplay muted loop \u003E\u003C\u002Fvideo\u003E\u003Cbr\u003E\nThere’s been a huge boom of “auto chess” games lately, from the original Dota 2 Auto Chess to Teamfight Tactics to Dota Underlords. Seeing all of those got me thinking — what if it were \u003Ci\u003Eactually\u003C\u002Fi\u003E chess that were automated?\u003C\u002Fp\u003E\n\u003Cp\u003EThe video above says it all. Earn gold to buy pieces, position them carefully, and stay alive! The game is single-player with leaderboards where you can show off your auto chess skills.\u003C\u002Fp\u003E\n\u003Cp\u003EAs fun as this is, it’s true that pieces sometimes move in silly ways. I’ve been looking into ways to reduce the randomness without sacrificing excitement, so keep an eye out for updates once I figure that one out ;)\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca target=\"_blank\" href=\"\u002Fautochess\u002F\"\u003EPlay it here\u003C\u002Fa\u003E, or check out the \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fgithub.com\u002Fmidblue\u002Fliteral-autochess\"\u003Esource code\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch2\u003ETsk: A Hypersimple Text-Based Task Tracker\u003C\u002Fh2\u003E\n\u003Ch4\u003EOct 2019\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg align=\"top\" src=\"\u002Flabs\u002Ftsk\u002F1.jpg\" alt=\"Tsk in action\"\u003E Born out of personal necessity, I used Vue and Electron to make a task tracker that permanently lives on my desktop.\u003C\u002Fp\u003E\n\u003Cp\u003EElements are draggable, section headers are color-customizable, and if you add a date like “(16\u002F9)” or “(next week)” in parentheses it will automatically track the time until that date for you, making the element in question glow red more and more as the deadline approaches.\u003C\u002Fp\u003E\n\u003Cp\u003EI plan on continuing to add features to it as the need arises, such as improved semantic date recognition and markdown-powered url embedding.\u003C\u002Fp\u003E\n\u003Cp\u003EIt’s proven invaluable for keeping track of my many clients and side projects! (And to remember to vote! Trump can GTFO.)\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Cp\u003EThat’s all for now! There’s more to come, so keep your eyes on this page!\u003C\u002Fp\u003E\n\u003C\u002Fsection\u003E\n"]}],fetch:[],mutations:[]});